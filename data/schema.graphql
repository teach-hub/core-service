schema {
  query: RootQueryType
  mutation: RootMutationType
}

type AssignmentType {
  active: Boolean
  allowLateSubmissions: Boolean
  courseId: ID!
  description: String
  endDate: String
  id: ID!
  link: String
  startDate: String
  submissions: [SubmissionType!]!
  title: String
}

type CourseType {
  active: Boolean!

  """Finds an assignment for a specific course"""
  assignment(id: ID!): AssignmentType

  """Active assignments within the course"""
  assignments: [AssignmentType!]!
  id: ID!
  name: String!
  organization: String
  period: Int!
  studentsCount: Int!

  """Subject the course belongs to"""
  subject: SubjectType!
  teachersCount: Int!

  """User roles within a course"""
  userRoles: [UserRoleType]
  viewerRole: RoleType!
  year: Int!
}

"""Authenticated data"""
type Login {
  token: String
  userRegistered: Boolean
}

"""Logout data"""
type Logout {
  token: String
}

"""Registered user data"""
type RegisterType {
  token: String
}

type RoleType {
  active: Boolean!
  id: ID!
  isTeacher: Boolean!
  name: String!
  parent: RoleType
  permissions: [String]
}

"""Root mutation"""
type RootMutationType {
  """Creates an assignment in a course"""
  createAssignment(active: Boolean, allowLateSubmissions: Boolean, courseId: ID, description: String, endDate: String, link: String, startDate: String, title: String): AssignmentType

  """Generates an invitation code"""
  generateInviteCode(courseId: ID!, roleId: ID!): String!

  """Login user"""
  login(code: String): Login

  """Logout user"""
  logout(token: String): Logout

  """Creates a user and authorizes it"""
  registerUser(file: String, lastName: String, name: String, notificationEmail: String): RegisterType

  """Sets the github organization of a course"""
  setOrganization(courseId: ID!, organizationName: String!): CourseType

  """Updates an assignment in a course"""
  updateAssignment(active: Boolean, allowLateSubmissions: Boolean, courseId: ID, description: String, endDate: String, id: ID, link: String, startDate: String, title: String): AssignmentType

  """Updates a user"""
  updateUser(file: String, githubId: String, lastName: String, name: String, notificationEmail: String, userId: ID!): UserType

  """Marks an invite as used returning the course id"""
  useInvite(inviteId: ID!): UseInviteResponse!
}

"""Root query"""
type RootQueryType {
  """Finds an assignment by id"""
  assignment(id: ID!): AssignmentType

  """Logged in user"""
  availableRoles: [RoleType!]!

  """Logged in user"""
  viewer: ViewerType
}

type SubjectType {
  active: Boolean!
  code: String!
  id: ID!
  name: String!
}

type SubmissionType {
  description: String
  id: String!

  """User who has made the submission"""
  user: UserType!
}

type UseInviteResponse {
  courseId: ID
}

type UserRoleType {
  active: Boolean!
  course: CourseType!
  id: ID!
  role: RoleType!
  user: UserType!
}

"""A non-admin user within TeachHub"""
type UserType {
  active: Boolean!
  file: String!
  githubId: String!
  id: ID!
  lastName: String!
  name: String!
  notificationEmail: String!
}

"""Viewer organizations data"""
type ViewerOrganizations {
  names: [String!]
}

type ViewerType {
  active: Boolean!

  """Get available github organizations for a user"""
  availableOrganizations: ViewerOrganizations

  """Finds a course for the viewer"""
  course(id: ID!): CourseType
  file: String!
  githubId: String!
  id: String!
  lastName: String!
  name: String!
  notificationEmail: String!

  """User user roles"""
  userRoles: [UserRoleType]
}
