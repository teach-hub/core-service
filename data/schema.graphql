schema {
  query: RootQueryType
  mutation: RootMutationType
}

type CourseType {
  active: Boolean!
  id: String!
  name: String!
  organization: String!
  period: Int!

  """Subject the course belongs to"""
  subject: SubjectType!

  """User roles within a course"""
  userRoles: [UserRoleType]
  year: Int!
}

"""Authenticated data"""
type Login {
  token: String
}

type RoleType {
  active: Boolean
  id: String
  name: String
  parent: RoleType
  permissions: [String]
}

"""Root mutation"""
type RootMutationType {
  """Login user"""
  login(code: String): Login

  """Updates a user"""
  updateUser(file: String, githubId: String, lastName: String, name: String, notificationEmail: String, userId: String!): UserType
}

"""Root query"""
type RootQueryType {
  """Logged in user"""
  viewer: ViewerType
}

type SubjectType {
  active: Boolean
  code: String
  id: String
  name: String
}

type UserRoleType {
  active: Boolean!
  course: CourseType
  id: String
  role: RoleType
  user: UserType
}

"""A non-admin user within TeachHub"""
type UserType {
  active: Boolean
  file: String
  githubId: String
  id: String
  lastName: String
  name: String
  notificationEmail: String
}

type ViewerType {
  active: Boolean!
  file: String!

  """Finds a course for the viewer"""
  findCourse(id: String!): CourseType
  githubId: String!
  id: String!
  lastName: String!
  name: String!
  notificationEmail: String!

  """User user roles"""
  userRoles: [UserRoleType]
}
